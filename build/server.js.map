{"version":3,"sources":["server.ts"],"names":[],"mappings":";;AAAA,mCAAkC;AAClC,mCAAkC;AAClC,qCAAoC;AACpC,iCAAgC;AAChC,6BAA4B;AAC5B,6CAA8C;AAE9C,0CAAyC;AACzC,kDAAiD;AACjD,MAAM,IAAI,GAAW,IAAI,CAAA;AAEzB,MAAa,MAAM;IAIf;QACI,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,CAAA;QAGpB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YACd,oBAAoB,EAAE,GAAG;SAC5B,CAAC,CAAC,CAAA;QACH,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,wBAAU,CAAC;YACpB,QAAQ,EAAE,IAAI;SACjB,CAAC,CAAC,CAAA;QACH,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,kBAAI,EAAE,CAAC,CAAA;QACpB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAA;QACpB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAA;QAEhC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAClD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;gBACvB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,4CAA4C,EAAE,IAAI,CAAC,CAAA;YAC3E,CAAC,CAAC,CAAA;YACF,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QAC/B,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAC,GAAG,CAAA;IACnB,CAAC;CACJ;AAhCD,wBAgCC;AACD,IAAI,MAAM,EAAE,CAAA;AAEZ,SAAS,iBAAiB,CAAC,iBAAsB;IAC7C,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAA;AAChD,CAAC","file":"server.js","sourcesContent":["import * as express from 'express'\r\nimport * as winston from 'winston'\r\nimport * as boom from 'express-boom'\r\nimport * as morgan from 'morgan'\r\nimport * as cors from 'cors'\r\nimport { json, urlencoded } from 'body-parser'\r\nimport { Express } from 'express'\r\nimport * as routes from './routes/_index'\r\nimport * as sequelize from './sqlz/models/_index'\r\nconst PORT: number = 3001\r\n\r\nexport class Server {\r\n\r\n    private app: Express\r\n\r\n    constructor() {\r\n        this.app = express()\r\n\r\n        // Express middleware\r\n        this.app.use(cors({\r\n            optionsSuccessStatus: 200\r\n        }))\r\n        this.app.use(urlencoded({\r\n            extended: true\r\n        }))\r\n        this.app.use(json())\r\n        this.app.use(boom())\r\n        this.app.use(morgan('combined'))\r\n\r\n        sequelize.default.sync({ force: true }).then(result => {\r\n            console.log(result);\r\n            this.app.listen(PORT, () => {\r\n                winston.log('info', '--> Server successfully started at port %d', PORT)\r\n            })\r\n            routes.initRoutes(this.app)\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    getApp() {\r\n        return this.app\r\n    }\r\n}\r\nnew Server()\r\n\r\nfunction middlewareOptions(middlewareOptions: any): any {\r\n    throw new Error('Function not implemented.')\r\n}\r\n  "],"sourceRoot":"../src"}